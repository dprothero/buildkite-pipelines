retry-config: &retry-config
  retry:
    automatic:
      - exit_status: -1 # Agent was lost
        limit: 2
      - exit_status: 255 # Forced agent shutdown
        limit: 2

steps:
  - label: ":typescript: check:workspaces (back-end)"
    branches:
      - master
      - preview
      - production
    commands:
      - set -e
      - cd back-end
      - yarn install --frozen-lockfile --development
      - yarn run setup
      - yarn run check:workspaces
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN:
              secret-id: global/buildkite/github
              json-key: .TOKEN
      - docker-login#v2.1.0:
          server: ghcr.io
          username: jameslnewell
          password-env: GITHUB_TOKEN
      - docker#v3.11.0:
          image: ghcr.io/mr-yum/ci:2.4.0
    <<: *retry-config

  - label: ":typescript: check:workspaces (back-end)"
    branches:
      - "!master"
      - "!preview"
      - "!production"
    commands:
      - set -e
      - cd back-end
      - yarn install --frozen-lockfile --development
      - yarn run setup:workspaces --since master --include-dependencies --include-dependents
      - yarn run check:workspaces --since master --include-dependents
    plugins:
      - seek-oss/aws-sm#v2.3.1:
        env:
          GITHUB_TOKEN:
            secret-id: global/buildkite/github
            json-key: ".TOKEN"
      - docker-login#v2.1.0:
          server: ghcr.io
          username: jameslnewell
          password-env: GITHUB_TOKEN
      - docker#v3.11.0:
          image: ghcr.io/mr-yum/ci:2.4.0
    <<: *retry-config

  - label: ":jest: test:unit (back-end)"
    key: backend-unit-test
    branches:
      - master
      - preview
      - production
    commands:
      - set -e
      - cd back-end
      - yarn install --frozen-lockfile --development
      - yarn run setup:workspaces
      - yarn run test:unit -- --ignore manage-api -- --coverage --runInBand --forceExit
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN:
              secret-id: global/buildkite/github
              json-key: ".TOKEN"
      - docker-login#v2.1.0:
          server: ghcr.io
          username: jameslnewell
          password-env: GITHUB_TOKEN
      - docker#v3.11.0:
          image: ghcr.io/mr-yum/ci:2.4.0
    artifact_paths:
      - back-end/**/coverage/coverage-final.json
      - back-end/**/coverage/**/coverage-final.json
      - back-end/**/coverage/cobertura-coverage.xml
      - back-end/**/coverage/**/cobertura-coverage.xml
    <<: *retry-config
    timeout_in_minutes: 10

  - label: ":coverage: coverage api"
    branches:
      - master
      - preview
      - production
    commands:
      - npm install -g codecov
      - ./scripts/upload-coverage.sh
    depends_on:
      - backend-unit-test
    plugins:
      - artifacts#v1.5.0:
          download:
            - "**/*"
      - seek-oss/aws-sm#v2.3.1:
          env:
            CODECOV_TOKEN:
              secret-id: "global/buildkite/codecov"
              json-key: ".TOKEN"
      - docker#v3.11.0:
          image: "node:16-stretch"
          environment:
            - "FORCE_CLOUR=2"
            - "CODECOV_TOKEN"
    soft_fail: true
    <<: *retry-config

  - label: ":jest: test:unit (back-end)"
    key: backend-unit-test-branch
    branches:
      - "!master"
      - "!preview"
      - "!production"
    env:
      DOCKER_BUILDKIT: 1
    commands:
      - set e
      - cd back-end
      - yarn install --frozen-lockfile --development
      - yarn run setup:workspaces --since master --include-dependencies
      - yarn run test:unit -- --ignore manage-api -- --coverage --runInBand --forceExit --changedSince master
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN:
              secret-id: global/buildkite/github
              json-key: ".TOKEN"
      - docker-login#v2.1.0:
          server: ghcr.io
          username: jameslnewell
          password-env: GITHUB_TOKEN
      - docker#v3.11.0:
          image: ghcr.io/mr-yum/ci:2.4.0
    artifact_paths:
      - back-end/**/coverage/coverage-final.json
      - back-end/**/coverage/**/coverage-final.json
      - back-end/**/coverage/cobertura-coverage.xml
      - back-end/**/coverage/**/cobertura-coverage.xml
    <<: *retry-config
    timeout_in_minutes: 10

  - label: ":coverage: coverage api"
    branches:
      - "!master"
      - "!preview"
      - "!production"
    commands:
      - npm install -g codecov
      - ./scripts/upload-coverage.sh
    depends_on:
      - backend-unit-test-branch
    plugins:
      - artifacts#v1.5.0:
          download:
            - "**/*"
      - seek-oss/aws-sm#v2.3.1:
          env:
            CODECOV_TOKEN:
              secret-id: "global/buildkite/codecov"
              json-key: ".TOKEN"
      - docker#v3.11.0:
          image: "node:16-stretch"
          environment:
            - "FORCE_CLOUR=2"
            - "CODECOV_TOKEN"
    soft_fail: true
    <<: *retry-config

  - label: ":kafka: check kafka config (back-end)"
    key: kafka-config-check
    commands:
      - set -e
      - cd back-end/tools/kafka-scripts
      - yarn install --frozen-lockfile --development
      - yarn run cli validate-config
    plugins:
      - seek-oss/aws-sm#v2.3.1:
          env:
            GITHUB_TOKEN:
              secret-id: global/buildkite/github
              json-key: ".TOKEN"
      - docker-login#v2.1.0:
          server: ghcr.io
          username: jameslnewell
          password-env: GITHUB_TOKEN
      - docker#v3.11.0:
          image: ghcr.io/mr-yum/ci:2.4.0
    <<: *retry-config